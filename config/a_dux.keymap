/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#define nmnv 0
#define nmnvcf 1
#define alfa 2
#define alfacf 3

&mt {
        quick-tap-ms = <175>;
};

/ {

	keymap {
		compatible = "zmk,keymap";

		nmnv {
			bindings = <
			&kp N8   &kp N9    &kp N0    &kp N1    &kp N2       &kp N3    &kp N4         &kp N5         &kp N6       &kp N7
			&kp LEFT &kp UP    &kp DOWN  &kp RIGHT &lt TAB      &mkp RCLK &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT
			&kp HOME &kp PG_UP &kp PG_DN &kp END   &mt LCTRL V  &lt G     &mkp LCLK      &kp C_VOL_DN   &kp C_VOL_UP &mkp MCLK
				                              &mt LALT BSPC &mt LSHIFT SPACE &lt 1 ENTER &tog 2
			>;
		};
		nmnvcf {
			bindings = <
			&kp F8       &kp F9        &kp F10       &kp F1        &kp F2    &kp F3  &kp F4    &kp F5           &kp F6         &kp F7
			&kp LC(LEFT) &kp LC(UP)    &kp LC(DOWN)  &kp LC(RIGHT) &kp ESC   &kp F11 &kp MINUS &mwh SCROLL_DOWN &mwh SCROLL_UP &kp EQUAL
			&kp LC(HOME) &kp LC(PG_UP) &kp LC(PG_DN) &kp LC(END)   &kp LCTRL &kp F12 &kp BSLH  &kp LC(LBKT)     &kp LC(RBKT)   &kp C_MUTE
				                              &mt LALT DEL  &trans    &trans   &trans
			>;
		};
		alfa {
			bindings = <
			&kp Q     &kp W     &kp E     &kp R     &kp T     &kp Y     &kp U     &kp I     &kp O     &kp P
			&kp A     &kp S     &kp D     &kp F     &kp G     &kp H     &kp J     &kp K     &kp L     &kp SEMI
			&kp Z     &kp X     &kp C     &kp V     &kp B     &kp N     &kp M     &kp COMMA &kp DOT   &kp SLASH
				                           &mt LALT BSPC   &trans   &lt 3 ENTER  &trans
			>;
		};
		alfacf {
			bindings = <
			&kp LC(Q) &kp LC(W) &kp LC(E)     &kp LC(R)       &kp GRAVE  &kp LS(N7) &kp RBKT  &kp LC(I) &kp LC(O)   &kp LC(P)
			&kp LC(A) &kp LC(S) &kp LC(ENTER) &kp LC(F)       &kp RCTRL  &kp MINUS  &kp LBKT  &kp LC(K) &kp LC(L)   &kp LC(SEMI)
			&kp LC(Z) &kp LC(X) &kp F9        &kp PAUSE_BREAK &kp LS(N2) &kp LC(N)  &kp LC(M) &kp SQT   &kp LC(DOT) &kp LC(SLASH)
				                             &kp DEL  &trans   &trans   &trans
			>;
		};

	};
};
